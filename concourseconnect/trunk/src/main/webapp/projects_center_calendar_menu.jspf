<%--
  ~ ConcourseConnect
  ~ Copyright 2009 Concursive Corporation
  ~ http://www.concursive.com
  ~
  ~ This file is part of ConcourseConnect, an open source social business
  ~ software and community platform.
  ~
  ~ Concursive ConcourseConnect is free software: you can redistribute it and/or
  ~ modify it under the terms of the GNU Affero General Public License as published
  ~ by the Free Software Foundation, version 3 of the License.
  ~
  ~ Under the terms of the GNU Affero General Public License you must release the
  ~ complete source code for any application that uses any part of ConcourseConnect
  ~ (system header files and libraries used by the operating system are excluded).
  ~ These terms must be included in any work that has ConcourseConnect components.
  ~ If you are developing and distributing open source applications under the
  ~ GNU Affero General Public License, then you are free to use ConcourseConnect
  ~ under the GNU Affero General Public License.
  ~
  ~ If you are deploying a web site in which users interact with any portion of
  ~ ConcourseConnect over a network, the complete source code changes must be made
  ~ available.  For example, include a link to the source archive directly from
  ~ your web site.
  ~
  ~ For OEMs, ISVs, SIs and VARs who distribute ConcourseConnect with their
  ~ products, and do not license and distribute their source code under the GNU
  ~ Affero General Public License, Concursive provides a flexible commercial
  ~ license.
  ~
  ~ To anyone in doubt, we recommend the commercial license. Our commercial license
  ~ is competitively priced and will eliminate any confusion about how
  ~ ConcourseConnect can be used and distributed.
  ~
  ~ ConcourseConnect is distributed in the hope that it will be useful, but WITHOUT
  ~ ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  ~ FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more
  ~ details.
  ~
  ~ You should have received a copy of the GNU Affero General Public License
  ~ along with ConcourseConnect.  If not, see <http://www.gnu.org/licenses/>.
  ~
  ~ Attribution Notice: ConcourseConnect is an Original Work of software created
  ~ by Concursive Corporation
  --%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<%@ taglib uri="/WEB-INF/concourseconnect-taglib.tld" prefix="ccp" %>
<c:set var="ctx" value="${pageContext.request.contextPath}" scope="request" />
<portlet:renderURL var="modifyMeetingUrl">
  <portlet:param name="portlet-action" value="modify"/>
  <portlet:param name="portlet-object" value="event"/>
</portlet:renderURL>
<portlet:actionURL var="deleteMeetingUrl">
  <portlet:param name="portlet-command" value="delete"/>
</portlet:actionURL>
<script type="text/javascript" language="javascript">
  var thisProjectId = -1;
  var thisOutlineId = -1;
  var thisMeetingId = -1;
  var thisTicketId = -1;
  var thisAssignmentId = -1;
  function displayProjectMeetingMenu(loc, id, meetingId, projectId) {
    // Set the action parameters for clicked item
    thisMeetingId = meetingId;
    thisProjectId = projectId;
    // Determine the menu to show
    var oMenu = YAHOO.widget.MenuManager.getMenu(loc+"none");
    if (!oMenu) {
      oMenu = new YAHOO.widget.Menu(loc + "none", { position: "dynamic", context: [loc, "tl", "bl"], hidedelay: 1000 });
      <ccp:permission name="project-calendar-add">
        oMenu.addItem({ text: "Modify Event", onclick: { fn: modifyProjectMeeting } });
      </ccp:permission>
      <ccp:permission name="project-calendar-delete">
        oMenu.addItem({ text: "Delete Event", onclick: { fn: deleteProjectMeeting } });
      </ccp:permission>
      oMenu.render(document.getElementById("popupLayer"));
    }
    oMenu.show();
  }

  function modifyProjectMeeting() {
    showPanel('Event','${modifyMeetingUrl}/' + thisMeetingId,'600');
  }

  function deleteProjectMeeting() {
    confirmDelete('${deleteMeetingUrl}&meeting=' + thisMeetingId);
  }

  function displayProjectOutlineMenu(loc, id, outlineId, projectId) {
    // Set the action parameters for clicked item
    thisOutlineId = outlineId;
    thisProjectId = projectId;
    // Determine the menu to show
    var oMenu = YAHOO.widget.MenuManager.getMenu(loc+"outline");
    if (!oMenu) {
      oMenu = new YAHOO.widget.Menu(loc + "outline", { position: "dynamic", context: [loc, "tl", "bl"], hidedelay: 1000 });
      <ccp:permission name="project-plan-outline-view">
        oMenu.addItem({ text: "View Outline", onclick: { fn: viewProjectOutline } });
      </ccp:permission>
      <ccp:permission name="project-plan-outline-edit">
        oMenu.addItem({ text: "Modify Outline", onclick: { fn: modifyProjectOutline } });
      </ccp:permission>
      oMenu.render(document.getElementById("popupLayer"));
    }
    oMenu.show();
  }

  function modifyProjectOutline() {
    document.location.href='<%= ctx %>/ProjectManagementRequirements.do?command=Modify&rid=' + thisOutlineId + '&pid='+ thisProjectId + '&return=Calendar';
  }
  function viewProjectOutline() {
    popURL('<%= ctx %>/ProjectManagementRequirements.do?command=Details&pid=' + thisProjectId + '&rid=' + thisOutlineId + '&popup=true','Outline_Details','650','375','yes','yes');
  }


  function displayProjectMenu(loc, id, assignmentId, projectId) {
    // Set the action parameters for clicked item
    thisAssignmentId = assignmentId;
    thisProjectId = projectId;
    // Determine the menu to show
    var oMenu = YAHOO.widget.MenuManager.getMenu(loc+"project");
    if (!oMenu) {
      oMenu = new YAHOO.widget.Menu(loc + "project", { position: "dynamic", context: [loc, "tl", "bl"], hidedelay: 1000 });
      <ccp:permission name="project-plan-meeting-modify">
        oMenu.addItem({ text: "View/Modify Assignment", onclick: { fn: modifyProjectAssignment } });
      </ccp:permission>
      oMenu.render(document.getElementById("popupLayer"));
    }
    oMenu.show();
  }

  function modifyProjectAssignment() {
      document.location.href='<%= ctx %>/ProjectManagementAssignments.do?command=Modify&pid=' + thisProjectId + '&aid=' + thisAssignmentId + '&return=Calendar';
  }


  function displayProjectTicketMenu(loc, id, ticketId,projectId) {
    // Set the action parameters for clicked item
    thisTicketId = ticketId;
    thisProjectId = projectId;
    // Determine the menu to show
    var oMenu = YAHOO.widget.MenuManager.getMenu(loc+"issue");
    if (!oMenu) {
      oMenu = new YAHOO.widget.Menu(loc + "issue", { position: "dynamic", context: [loc, "tl", "bl"], hidedelay: 1000 });
      <ccp:permission name="project-tickets-view">
        oMenu.addItem({ text: "View Issue", onclick: { fn: viewProjectIssue } });
      </ccp:permission>
      <ccp:permission name="project-tickets-edit">
        oMenu.addItem({ text: "Modify Issue", onclick: { fn: modifyProjectIssue } });
      </ccp:permission>
      oMenu.render(document.getElementById("popupLayer"));
    }
    oMenu.show();
  }

  function viewProjectIssue() {
    document.location.href='<%= ctx %>/ProjectManagementTickets.do?command=Details&id=' + thisTicketId + '&pid='+ thisProjectId + '&return=list';
  }

  function modifyProjectIssue() {
    document.location.href='<%= ctx %>/ProjectManagementTickets.do?command=Modify&id=' + thisTicketId + '&pid='+ thisProjectId + '&return=list';
  }
</script>
