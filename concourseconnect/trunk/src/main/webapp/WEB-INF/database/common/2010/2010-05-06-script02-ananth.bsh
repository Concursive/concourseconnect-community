import com.concursive.connect.Constants;
import com.concursive.connect.web.utils.*;
import com.concursive.connect.web.modules.profile.dao.*;
import com.concursive.connect.web.modules.webcast.dao.Webcast;

// Update each project to have a corresponding webcast record
PagedListInfo pagedListInfo = new PagedListInfo();
pagedListInfo.setItemsPerPage(1000);
pagedListInfo.setDefaultSort("project_id", null);

// Use the paged list to populate it with the list criteria
ProjectList projects = new ProjectList();
projects.setPortalState(Constants.FALSE);
projects.setPagedListInfo(pagedListInfo);
projects.buildList(db);

System.out.println("Total projects to process: " + pagedListInfo.getMaxRecords());

int count = 0;
while (projects.size() > 0) {
  System.out.println(" Page: " + pagedListInfo.getPage() + " of " + pagedListInfo.getNumberOfPages());

  for (Project project : projects) {
    // Insert the webcast

    // insert corresponding webcast info
    Webcast webcast = new Webcast();
    webcast.setProjectId(project.getId());
    webcast.setEnteredBy(project.getEnteredBy());
    webcast.insert(db);
    ++count;
  }

  // Always reset the project list or else they are included on buildList again
  projects.clear();
  if (pagedListInfo.getPage() < pagedListInfo.getNumberOfPages()) {
    pagedListInfo.setCurrentPage(pagedListInfo.getPage() + 1);
    projects.buildList(db);
  }
}
System.out.println("   Total projects updated: " + count);
