<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ ConcourseConnect
  ~ Copyright 2009 Concursive Corporation
  ~ http://www.concursive.com
  ~
  ~ This file is part of ConcourseConnect, an open source social business
  ~ software and community platform.
  ~
  ~ Concursive ConcourseConnect is free software: you can redistribute it and/or
  ~ modify it under the terms of the GNU Affero General Public License as published
  ~ by the Free Software Foundation, version 3 of the License.
  ~
  ~ Under the terms of the GNU Affero General Public License you must release the
  ~ complete source code for any application that uses any part of ConcourseConnect
  ~ (system header files and libraries used by the operating system are excluded).
  ~ These terms must be included in any work that has ConcourseConnect components.
  ~ If you are developing and distributing open source applications under the
  ~ GNU Affero General Public License, then you are free to use ConcourseConnect
  ~ under the GNU Affero General Public License. Â 
  ~
  ~ If you are deploying a web site in which users interact with any portion of
  ~ ConcourseConnect over a network, the complete source code changes must be made
  ~ available.  For example, include a link to the source archive directly from
  ~ your web site.
  ~
  ~ For OEMs, ISVs, SIs and VARs who distribute ConcourseConnect with their
  ~ products, and do not license and distribute their source code under the GNU
  ~ Affero General Public License, Concursive provides a flexible commercial
  ~ license.
  ~
  ~ To anyone in doubt, we recommend the commercial license. Our commercial license
  ~ is competitively priced and will eliminate any confusion about how
  ~ ConcourseConnect can be used and distributed.
  ~
  ~ ConcourseConnect is distributed in the hope that it will be useful, but WITHOUT
  ~ ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  ~ FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more
  ~ details.
  ~
  ~ You should have received a copy of the GNU Affero General Public License
  ~ along with ConcourseConnect.  If not, see <http://www.gnu.org/licenses/>.
  ~
  ~ Attribution Notice: ConcourseConnect is an Original Work of software created
  ~ by Concursive Corporation
  -->
<workflow>
  <!-- Hooks decide which items can be triggered, so if there is code
  that executes the WorkflowManager when a ticket is updated or inserted,
  the corresponding process is activated -->
  <hooks>
    <hook class="com.concursive.connect.web.modules.profile.dao.Project" module="Project Management">
      <actions>
        <action type="insert" process="teamelements.application.project.insert"/>
        <action type="update" process="teamelements.application.project.update"/>
      </actions>
    </hook>
    <hook class="com.concursive.connect.web.modules.profile.beans.ProjectFormBean" module="Project Management">
      <actions><action type="insert" process="teamelements.application.project.claim"/></actions>
    </hook>
    <hook class="com.concursive.connect.web.modules.register.beans.RegisterBean" module="Project Management">
      <actions><action type="insert" process="teamelements.application.portal.register"/></actions>
    </hook>
    <!--
    <hook class="com.concursive.connect.web.modules.members.dao.TeamMember" module="Project Management">
      <actions><action type="insert" process="teamelements.application.project.become-fan"/></actions>
    </hook>
    -->
    <hook class="com.concursive.connect.web.modules.lists.dao.TaskList" module="Project Management">
      <actions><action type="insert" process="teamelements.application.project.favorite-list"/></actions>
    </hook>
    <hook class="com.concursive.connect.web.modules.members.dao.TeamMember" module="Project Management">
      <actions>
        <action type="insert" process="teamelements.application.project.memberadd"/>
        <action type="update" process="teamelements.application.project.memberupdate"/>
      </actions>
    </hook>
    <hook class="com.concursive.connect.web.modules.reviews.dao.ProjectRating" module="Project Management">
      <actions>
        <action type="insert" process="teamelements.application.project.submit-review"/>
        <action type="update" process="teamelements.application.project.update-review"/>
      </actions>
    </hook>
    <hook class="com.concursive.connect.web.modules.blog.dao.BlogPost" module="Project Management">
      <actions><action type="insert" process="teamelements.application.project.post-blog"/></actions>
      <actions><action type="update" process="teamelements.application.project.post-blog"/></actions>
    </hook>
    <hook class="com.concursive.connect.web.modules.calendar.dao.Meeting" module="Project Management">
      <actions>
        <action type="insert" process="teamelements.application.project.setup-event"/>
        <action type="update" process="teamelements.application.project.update-event"/>
      </actions>
    </hook>
    <hook class="com.concursive.connect.web.modules.wiki.dao.Wiki" module="Project Management">
      <actions>
        <action type="insert" process="teamelements.application.project.post-wiki"/>
        <action type="updated" process="teamelements.application.project.post-wiki"/>
      </actions>
    </hook>
    <hook class="com.concursive.connect.web.modules.discussion.dao.Forum" module="Project Management">
      <actions><action type="insert" process="teamelements.application.project.create-forum"/></actions>
    </hook>
    <hook class="com.concursive.connect.web.modules.discussion.dao.Topic" module="Project Management">
      <actions><action type="insert" process="teamelements.application.project.post-question"/></actions>
    </hook>
    <hook class="com.concursive.connect.web.modules.discussion.dao.Reply" module="Project Management">
      <actions><action type="insert" process="teamelements.application.project.post-answer"/></actions>
    </hook>
    <hook class="com.concursive.connect.web.modules.promotions.dao.Ad" module="Project Management">
      <actions><action type="insert" process="teamelements.application.project.add-promotion"/></actions>
    </hook>
    <hook class="com.concursive.connect.web.modules.classifieds.dao.Classified" module="Project Management">
      <actions><action type="insert" process="teamelements.application.project.post-classified-ad"/></actions>
    </hook>
    <hook class="com.concursive.connect.web.modules.documents.dao.FileItem" module="Project Management">
      <actions>
        <action type="insert" process="teamelements.application.project.share-document"/>
        <action type="delete" process="teamelements.application.project.delete-document"/>
      </actions>
    </hook>
    <hook class="com.concursive.connect.web.modules.documents.dao.FileItemList" module="Project Management">
      <actions><action type="insert" process="teamelements.application.project.share-image"/></actions>
    </hook>  
    <hook class="com.concursive.connect.web.modules.documents.beans.FileDownload" module="Project Management">
      <actions><action type="insert" process="teamelements.application.project.download-document"/></actions>
    </hook>
    <hook class="com.concursive.connect.web.modules.documents.dao.FileFolder" module="Project Management">
      <actions><action type="insert" process="teamelements.application.project.create-folder"/></actions>
    </hook>
    <hook class="com.concursive.connect.web.modules.badges.dao.Badge" module="Project Management">
      <actions>
        <action type="insert" process="teamelements.application.project.add-badge"/>
        <action type="delete" process="teamelements.application.project.remove-badge"/>
      </actions>
    </hook>
    <hook class="com.concursive.connect.web.modules.badges.dao.ProjectBadge" module="Project Management">
      <actions><action type="insert" process="teamelements.application.project.grant-badge"/></actions>
    </hook>
    <hook class="com.concursive.connect.web.modules.calendar.utils.MeetingInviteesBean" module="Project Management">
      <actions><action type="insert" process="connect.event.meetinginvitation"/></actions>
    </hook>
  </hooks>

  <!-- Each process describes the workflow for the various object and action that is being hooked-->
  <processes>
    <process name="connect.event.meetinginvitation" description="Event meeting invitation to attendees" startId="1">
      <components>
        <component id="1" parent="0" class="com.concursive.connect.web.modules.calendar.workflow.SendEventMeetingInvitation"></component>
      </components>
    </process>
  
    <process name="teamelements.application.project.insert" description="Record Project Events" startId="1">
      <components>
        <component id="1" parent="0" class="com.concursive.connect.web.modules.profile.workflow.SaveProjectAddEvent" enabled="true">
          <parameters>
            <parameter name="history.text">${user} added ${profile}</parameter>
          </parameters>
        </component>
      </components>
    </process>

    <process name="teamelements.application.project.update" description="Record Project Events" startId="1">
      <components>
        <component id="1" parent="0" class="com.concursive.connect.web.modules.profile.workflow.SaveProjectUpdateEvent" enabled="true">
          <parameters>
            <parameter name="history.update-user-profile.text">${user} updated my profile</parameter>
            <parameter name="history.become-profile-owner.text">${user} became the owner of ${profile}</parameter>
            <parameter name="history.update-profile.text">${user} updated ${profile}</parameter>
          </parameters>
        </component>
      </components>
    </process>

    <process name="teamelements.application.project.claim" description="Record Project Events" startId="1">
      <components>
        <component id="1" parent="0" class="com.concursive.connect.web.modules.profile.workflow.SaveProjectClaimEvent" enabled="true">
          <parameters>
            <parameter name="history.text">${user} claimed ${profile}</parameter>
          </parameters>
        </component>
      </components>
    </process>

    <process name="teamelements.application.portal.register" description="Record Portal Events" startId="1">
      <components>
        <component id="1" parent="0" class="com.concursive.connect.web.modules.register.workflow.SaveUserRegisterEvent" enabled="true">
          <parameters>
            <parameter name="history.text">${user} joined the site</parameter>
          </parameters>
        </component>
      </components>
    </process>

    <process name="teamelements.application.project.memberadd" description="Record Project Events" startId="1">
      <components>
        <component id="1" parent="0" class="com.concursive.connect.web.modules.members.workflow.SaveTeamMemberAddEvents" enabled="true">
          <parameters>
            <parameter name="history.invite.text">${user} invited ${member} to ${profile}</parameter>
            <parameter name="history.fan.text">${member} became a member of ${profile}</parameter>
            <parameter name="history.friend.text">${member} became a friend of ${profile}</parameter>
          </parameters>
        </component>
      </components>
    </process>

    <process name="teamelements.application.project.memberupdate" description="Record Project Events" startId="1">
      <components>
        <component id="1" parent="0" class="com.concursive.connect.web.modules.members.workflow.SaveTeamMemberUpdateEvents" enabled="true">
          <parameters>
            <parameter name="history.friend.invite.text">${member} became a friend of ${user}</parameter>
            <parameter name="history.invite.text">${member} accepted an invitation from ${user} to join ${profile}</parameter>
            <parameter name="history.promote.text">${user} promoted ${member} to ${profile} ${role}</parameter>
            <parameter name="history.grant.text">${user} granted tools access to ${member}</parameter>  
          </parameters>
        </component>
      </components>
    </process>
    
    <process name="teamelements.application.project.favorite-list" description="Record Project Events" startId="1">
      <components>
        <component id="1" parent="0" class="com.concursive.connect.web.modules.lists.workflow.SaveProjectBookmarkEvent" enabled="true">
          <parameters>
            <parameter name="history.bookmark.singlelist.text">${user} bookmarked ${profile} on ${list}</parameter>
            <parameter name="history.bookmark.multiplelist.text">${user} bookmarked ${profile} on ${lists}</parameter>
          </parameters>
        </component>
      </components>
    </process>

    <process name="teamelements.application.project.share-image" description="Record Project Events" startId="1">
      <components>
        <component id="1" parent="0" class="com.concursive.connect.web.modules.profile.workflow.SaveProjectShareImageEvent" enabled="true">
          <parameters>
            <parameter name="history.text">${user} shared an image with ${profile}</parameter>
            <parameter name="history.update-user-profile.text">${user} added an image</parameter>
          </parameters>
        </component>
      </components>
    </process>

    <process name="teamelements.application.project.submit-review" description="Record Project Events" startId="1">
      <components>
        <component id="1" parent="0" class="com.concursive.connect.web.modules.reviews.workflow.SaveProjectRatingEvent" enabled="true">
          <parameters>
            <parameter name="history.addreview.text">${user} added a review ${review} to ${profile}</parameter>
          </parameters>
        </component>
      </components>
    </process>

    <process name="teamelements.application.project.update-review" description="Record Project Events" startId="1">
      <components>
        <component id="1" parent="0" class="com.concursive.connect.web.modules.reviews.workflow.SaveProjectRatingEvent" enabled="true">
          <parameters>
            <parameter name="history.updatereview.text">${user} updated a review ${review} for ${profile}</parameter>
          </parameters>
        </component>
      </components>
    </process>

    <process name="teamelements.application.project.post-blog" description="Record Project Events" startId="1">
      <components>
        <component id="1" parent="0" class="com.concursive.connect.web.modules.blog.workflow.SaveBlogEntryEvent" enabled="true">
          <parameters>
            <parameter name="history.text">${user} published ${blog} in ${profile}</parameter>
            <parameter name="history.user-profile.text">${user} published ${blog}</parameter>
          </parameters>
        </component>
      </components>
    </process>

    <process name="teamelements.application.project.setup-event" description="Record Project Events" startId="1">
      <components>
        <component id="1" parent="0" class="com.concursive.connect.web.modules.calendar.workflow.SaveMeetingEvent" enabled="true">
          <parameters>
            <parameter name="history.addevent.text">${user} scheduled ${event} in ${profile}</parameter>
            <parameter name="history.user-profile.addevent.text">${user} scheduled ${event}</parameter>
          </parameters>
        </component>
      </components>
    </process>

    <process name="teamelements.application.project.update-event" description="Record Project Events" startId="1">
      <components>
        <component id="1" parent="0" class="com.concursive.connect.web.modules.calendar.workflow.SaveMeetingEvent" enabled="true">
          <parameters>
            <parameter name="history.updateevent.text">${user} re-scheduled ${event} in ${profile}</parameter>
            <parameter name="history.user-profile.updateevent.text">${user} re-scheduled ${event}</parameter>
          </parameters>
        </component>
      </components>
    </process>

    <process name="teamelements.application.project.post-wiki" description="Record Project Events" startId="1">
      <components>
        <component id="1" parent="0" class="com.concursive.connect.web.modules.wiki.workflow.SaveWikiEvent" enabled="true">
          <parameters>
            <parameter name="history.text">${user} contributed to ${wiki} in ${profile}</parameter>
            <parameter name="history.user-profile.text">${user} contributed to ${wiki}</parameter>
          </parameters>
        </component>
      </components>
    </process>

    <process name="teamelements.application.project.create-forum" description="Record Project Events" startId="1">
      <components>
        <component id="1" parent="0" class="com.concursive.connect.web.modules.discussion.workflow.SaveForumEntryEvent" enabled="true">
          <parameters>
            <parameter name="history.text">${user} created a forum ${forum} in ${profile}</parameter>
            <parameter name="history.user-profile.text">${user} created a forum ${forum}</parameter>
          </parameters>
        </component>
      </components>
    </process>

    <process name="teamelements.application.project.post-question" description="Record Project Events" startId="1">
      <components>
        <component id="1" parent="0" class="com.concursive.connect.web.modules.discussion.workflow.SaveForumTopicEntryEvent" enabled="true">
          <parameters>
            <parameter name="history.question.text">${user} posted the question ${topic}</parameter>
            <parameter name="history.topic.text">${user} posted the topic ${topic}</parameter>
          </parameters>
        </component>
      </components>
    </process>

    <process name="teamelements.application.project.post-answer" description="Record Project Events" startId="1">
      <components>
        <component id="1" parent="0" class="com.concursive.connect.web.modules.discussion.workflow.SaveForumTopicResponseEvent" enabled="true">
          <parameters>
            <parameter name="history.postreply.text">${user} posted a reply to ${topic}</parameter>
            <parameter name="history.postanswer.text">${user} posted a reply to ${topic}</parameter>
            <parameter name="history.markanswer.text">${user} marked an answer by ${answeredby} as correct for ${topic}</parameter>
            <parameter name="history.markanswer.user-profile.text">${user} found an answer for ${topic}</parameter>
          </parameters>
        </component>
      </components>
    </process>

    <process name="teamelements.application.project.add-promotion" description="Record Project Events" startId="1">
      <components>
        <component id="1" parent="0" class="com.concursive.connect.web.modules.promotions.workflow.SaveAdEntryEvent" enabled="true">
          <parameters>
            <parameter name="history.text">${user} added a promotion ${promotion} for ${profile}</parameter>
            <parameter name="history.user-profile.text">${user} added a promotion ${promotion}</parameter>
          </parameters>
        </component>
      </components>
    </process>

    <process name="teamelements.application.project.post-classified-ad" description="Record Project Events" startId="1">
      <components>
        <component id="1" parent="0" class="com.concursive.connect.web.modules.classifieds.workflow.SaveClassifiedAdEntryEvent" enabled="true">
          <parameters>
            <parameter name="history.text">${user} posted a classified ad ${classified} in ${profile}</parameter>
            <parameter name="history.user-profile.text">${user} posted a classified ad ${classified}</parameter>
          </parameters>
        </component>
      </components>
    </process>

    <process name="teamelements.application.project.share-document" description="Record Project Events" startId="1">
      <components>
        <component id="1" parent="0" class="com.concursive.connect.web.modules.documents.workflow.SaveDocumentEntryEvent" enabled="true">
          <parameters>
            <parameter name="history.text">${user} shared the file ${document} in ${profile}</parameter>
            <parameter name="history.user-profile.text">${user} shared the file ${document}</parameter>
          </parameters>
        </component>
      </components>
    </process>

    <process name="teamelements.application.project.download-document" description="Record Project Events" startId="1">
      <components>
        <component id="1" parent="0" class="com.concursive.connect.web.modules.documents.workflow.SaveDocumentDownloadEvent" enabled="true">
          <parameters>
            <parameter name="history.text">${user} downloaded ${document}</parameter>
          </parameters>
        </component>
      </components>
    </process>

    <process name="teamelements.application.project.delete-document" description="Record Project Events" startId="1">
      <components>
        <component id="1" parent="0" class="com.concursive.connect.web.modules.documents.workflow.SaveDocumentDeleteEvent" enabled="true">
          <parameters>
            <parameter name="history.text">${user} deleted ${document}</parameter>
          </parameters>
        </component>
      </components>
    </process>

    <process name="teamelements.application.project.create-folder" description="Record Project Events" startId="1">
      <components>
        <component id="1" parent="0" class="com.concursive.connect.web.modules.documents.workflow.SaveFolderEntryEvent" enabled="true">
          <parameters>
            <parameter name="history.text">${user} created a folder ${folder} in ${profile}</parameter>
            <parameter name="history.user-profile.text">${user} created a folder ${folder}</parameter>
          </parameters>
        </component>
      </components>
    </process>

    <process name="teamelements.application.project.grant-badge" description="Record Project Events" startId="1">
      <components>
        <component id="1" parent="0" class="com.concursive.connect.web.modules.badges.workflow.SaveAssignBadgeEvent" enabled="true">
          <parameters>
            <parameter name="history.text">${user} granted the badge ${badge} to ${profile}</parameter>
            <parameter name="history.user-profile.text">${user} added the badge ${badge}</parameter>
          </parameters>
        </component>
      </components>
    </process>
  </processes>
</workflow>